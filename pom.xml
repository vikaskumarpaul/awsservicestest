<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.awstest.services</groupId>
	<artifactId>awsservicestest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>awsservicestest</name>
	<description>Demo project to test AWS Services</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<springfox-version>2.9.2</springfox-version>
		<swagger-gen.api.package>awsservices/api</swagger-gen.api.package>
		<swagger-gen.model.package>awsservices/model</swagger-gen.model.package>
		<start-class>com.awstest.services.AwsservicestestApplication</start-class>
		<liquibase.version>3.5.5</liquibase.version>
		<liquibase-hibernate5.version>3.6</liquibase-hibernate5.version>
		<mapstruct.version>1.2.0.Final</mapstruct.version>
		<javassist.version>3.22.0-GA</javassist.version>
		<spring-boot.version>2.1.4.RELEASE</spring-boot.version>
		<validation-api.version>2.0.1.Final</validation-api.version>
		<dockerfile-maven-plugin.version>1.4.3</dockerfile-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-aws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<!--SpringFox dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
			<exclusions>
				<exclusion>
					<artifactId>org.mapstruct</artifactId>
					<groupId>mapstruct</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>${hibernate.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.liquibase</groupId> <artifactId>liquibase-core</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>com.github.joschi.jackson</groupId>
			<artifactId>jackson-datatype-threetenbp</artifactId>
			<version>2.6.4</version>
		</dependency>
		<!-- Bean Validation API support -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>27.1-jre</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-loader-tools</artifactId> 
			</dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-actuator</artifactId> 
			</dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-aop</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-spring-service-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-data</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
			<version>6.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>com.chargebee</groupId>
			<artifactId>chargebee-java</artifactId>
			<version>2.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.8</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<testResources>
			<testResource>
				<directory>src/test/resources/</directory>
			</testResource>
			<testResource>
				<directory>src/test/features</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<!-- For JPA static metamodel generation -->
						<path>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<version>${hibernate.version}</version>
						</path>

					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/classes</outputDirectory>
							<useDefaultDelimiters>false</useDefaultDelimiters>
							<delimiters>
								<delimiter>#</delimiter>
							</delimiters>
							<resources>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>true</filtering>
									<includes>
										<include>config/*.yml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>config/*.yml</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- <execution> <id>docker-resources</id> <phase>validate</phase> <goals> 
						<goal>copy-resources</goal> </goals> <configuration> <outputDirectory>target/</outputDirectory> 
						<resources> <resource> <directory>src/main/docker/</directory> <filtering>false</filtering> 
						<excludes> <exclude>**/*.yml</exclude> </excludes> </resource> </resources> 
						</configuration> </execution> -->
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.liquibase</groupId> <artifactId>liquibase-maven-plugin</artifactId> 
				<version>${liquibase.version}</version> <configuration> <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile> 
				<diffChangeLogFile>src/main/resources/config/liquibase/changelog/${maven.build.timestamp}_changelog.xml</diffChangeLogFile> 
				<driver>org.postgresql.Driver</driver> <url>jdbc:postgresql://localhost:5432/postgres</url> 
				<defaultSchemaName>public</defaultSchemaName> <username>postgres</username> 
				<password></password> <verbose>true</verbose> <logging>debug</logging> </configuration> 
				<dependencies> <dependency> <groupId>org.javassist</groupId> <artifactId>javassist</artifactId> 
				<version>${javassist.version}</version> </dependency> <dependency> <groupId>org.liquibase.ext</groupId> 
				<artifactId>liquibase-hibernate5</artifactId> <version>${liquibase-hibernate5.version}</version> 
				</dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> 
				<version>${spring-boot.version}</version> </dependency> <dependency> <groupId>javax.validation</groupId> 
				<artifactId>validation-api</artifactId> <version>${validation-api.version}</version> 
				</dependency> </dependencies> </plugin> -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${start-class}</mainClass>
					<executable>true</executable>
					<fork>true</fork>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.8</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>com.spotify</groupId> <artifactId>dockerfile-maven-plugin</artifactId> 
				<version>${dockerfile-maven-plugin.version}</version> <executions> <execution> 
				<id>default</id> <goals> <goal>build</goal> <goal>push</goal> </goals> </execution> 
				<execution> <id>tag-latest</id> <phase>none</phase> <goals> <goal>build</goal> 
				<goal>tag</goal> <goal>push</goal> </goals> </execution> <execution> <id>version</id> 
				<phase>none</phase> <goals> <goal>build</goal> <goal>tag</goal> <goal>push</goal> 
				</goals> <configuration> <tag>${project.version}</tag> </configuration> </execution> 
				<execution> <id>commit</id> <phase>none</phase> <goals> <goal>build</goal> 
				<goal>tag</goal> <goal>push</goal> </goals> <configuration> <tag>${git.commit.id.describe}</tag> 
				</configuration> </execution> </executions> <configuration> <repository>compliance</repository> 
				<contextDirectory>${project.build.directory}</contextDirectory> </configuration> 
				</plugin> -->
			<!-- <plugin> <groupId>org.openapitools</groupId> <artifactId>openapi-generator-maven-plugin</artifactId> 
				<version>3.3.4</version> <executions> <execution> <goals> <goal>NAgenerate</goal> 
				</goals> <configuration> <language>spring</language> <generateSupportingFiles>false</generateSupportingFiles> 
				<inputSpec>src/main/resources/AwsServicesOpenApi.yaml</inputSpec> <generateApiTests>false</generateApiTests> 
				<generateApis>true</generateApis> <generateModels>true</generateModels> <output>src/main/java</output> 
				<configOptions> <modelPackage>com.awstest.services.openapi.model</modelPackage> 
				<apiPackage>com.awstest.services.openapi.api</apiPackage> <interfaceOnly>true</interfaceOnly> 
				<library>spring-boot</library> <useBeanValidation>true</useBeanValidation> 
				<dateLibrary>java8</dateLibrary> <java8>true</java8> </configOptions> </configuration> 
				</execution> </executions> <dependencies> <dependency> <groupId>org.openapitools</groupId> 
				<artifactId>openapi-generator-maven-plugin</artifactId> <version>3.3.4</version> 
				</dependency> </dependencies> </plugin> -->
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>${maven-war-plugin.version}</version>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<!-- <properties> <spring.profiles.active>dev${profile.no-liquibase}</spring.profiles.active> 
				</properties> -->
		</profile>
		<profile>
			<id>prod</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven-clean-plugin.version}</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>target/www/</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>${maven-war-plugin.version}</version>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring-boot.version}</version>
						<configuration>
							<mainClass>${start-class}</mainClass>
							<executable>true</executable>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-info</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
						<version>${git-commit-id-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>revision</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<failOnNoGitDirectory>false</failOnNoGitDirectory>
							<generateGitPropertiesFile>true</generateGitPropertiesFile>
							<includeOnlyProperties>
								<includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
								<includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
								<includeOnlyProperty>^git.branch$</includeOnlyProperty>
							</includeOnlyProperties>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<!-- <properties> default Spring profiles <spring.profiles.active>prod${profile.swagger}${profile.no-liquibase}</spring.profiles.active> 
				</properties> -->
		</profile>
		<profile>
			<!-- Profile for applying IDE-specific configuration. At the moment it 
				configures MapStruct and Hibernate JPA Metamodel Generator, which you need 
				when working with DTOs and entity filtering. -->
			<id>IDE</id>
			<dependencies>
				<dependency>
					<groupId>org.mapstruct</groupId>
					<artifactId>mapstruct-processor</artifactId>
					<version>${mapstruct.version}</version>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-jpamodelgen</artifactId>
					<version>${hibernate.version}</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>